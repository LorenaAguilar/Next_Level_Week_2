/* Landing page => Página inicial (página que você encontra ao entrar no site)*/

#page-landing {
  background: var(--color-primary);
}

#page-landing #container {
  color: var(--color-text-in-primary);
}

.logo-container img {
  height: 10rem;
}

.logo-container {
  text-align: center;
  margin-bottom: 3.2rem;
}

.logo-container h2 {
  font-weight: 500;
  font-size: 3.6rem;
  line-height: 4.6rem;
  margin-top: 0.8rem;
}

.hero-image {
  width: 100%;
}

.buttons-container {
  display: flex;
  justify-content: center;
  margin: 3.2rem 0;
}

.buttons-container a {
  width: 30rem;
  height: 10.4rem;
  border-radius: 0.8rem; /* Arredonda a borda das caixas */
  margin-right: 1.6rem;
  font: 700 2.4rem Archivo;

  display: flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;

  transition: background 0.2s;

  color: var(--color-button-text);
}

.buttons-container a img {
  width: 4rem;
  margin-right: 2.4rem;
}

/* Botão de "estudar" */
.buttons-container a.study {
  background: var(--color-primary-lighter);
}

.buttons-container a.study:hover {
  /* hover => essa ação será executada quando passarmos com o mouse sobre o botão*/
  background: var(--color-primary-light);
}

/* Botão de "dar aulas" */
.buttons-container a.give-classes {
  background: var(--color-secondary);
  margin-right: 0;
}

.buttons-container a.give-classes:hover {
  /* hover => essa ação será executada quando passarmos com o mouse sobre o botão*/
  background: var(--color-secondary-dark);
}

.total-connections {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.total-connections img {
  margin-left: 0.8rem;
}

@media (max-width: 699px) {
  :root {
    font-size: 40%;
  }
}

/* Regra do CSS que será seguida somente quando um certo padrão for seguido*/
/* No exemplo abaixo, se a largura minima for 1100px ele vai seguir o que está dentro das chaves*/
@media (min-width: 1100px) {
  /* Container é onde estão todos os nossos elementos */
  #page-landing #container {
    max-width: 1100px;
    display: grid; /* Esse display vai separar nossos elementos em linhas e colunas (em caso de dúvida pesquisar: "display grid CSS"*/
    /* Definindo números de colunas e linhas: */
    grid-template-columns: 2fr 1fr 2fr; /* 1ª coluna: 2 frações 2ª coluna: 1 fração e 3ª coluna: 2frações */
    grid-template-rows: 350px 1fr; /*A primeira linha será fixa com 350pixels e a segunda será tudo que sobrar*/

    /* O grid tenta encaixar os elementos da melhor forma que ele conseguir, por isso,
     agora temos que criar posições estratégicas para colocar os elementos. */

    grid-template-areas:
      "proffy image image" /* Primeira linha: Na primeira coluna ficará a logo, na segunda e na terceira a imagem */
      "button button texting"; /* Segunda linha: Na primeira e segunda coluna ficará o botão e na terceira o texto */

    column-gap: 87px;
    row-gap: 86px;
  }

  /* Agora tenho que "avisar" para cada um dos elementos onde eles vão ficar */
  .logo-container {
    grid-area: proffy;
    text-align: initial; /* Vai resetar o alinhamento dele para o alinhamento inicial*/
    align-self: center;
    margin: 0;
  }

  .logo-container img {
    height: 127px;
  }

  .hero-image {
    grid-area: image;
    height: 350px;
  }

  .buttons-container {
    grid-area: button;
    justify-content: flex-start;
    margin: 0;
  }

  .total-connections {
    grid-area: texting;
    justify-self: end;
    font-size: 1.2rem;
  }
}
